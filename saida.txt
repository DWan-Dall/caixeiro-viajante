> ## 1. Instalar pacotes se necessario
 install.packages(c("dplyr", "ggplot2", "combinat"))
Instalando pacotes em ‘/usr/local/lib/R/site-library’
(como ‘lib’ não foi especificado)
tentando a URL 'https://cloud.r-project.org/src/contrib/dplyr_1.1.4.tar.gz'
tentando a URL 'https://cloud.r-project.org/src/contrib/ggplot2_3.5.2.tar.gz'
tentando a URL 'https://cloud.r-project.org/src/contrib/combinat_0.0-8.tar.gz'
* installing *source* package ‘dplyr’ ...
** this is package ‘dplyr’ version ‘1.1.4’
** pacote ‘dplyr’ desempacotado com sucesso e somas MD5 verificadas
** using staged installation
** libs
using C++ compiler: ‘g++ (Debian 12.2.0-14) 12.2.0’
g++ -std=gnu++17 -I"/usr/share/R/include" -DNDEBUG       -fpic  -g -O2 -ffile-prefix-map=/home/jranke/git/r-backports/bookworm/r-base-4.5.0=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -c chop.cpp -o chop.o
g++ -std=gnu++17 -I"/usr/share/R/include" -DNDEBUG       -fpic  -g -O2 -ffile-prefix-map=/home/jranke/git/r-backports/bookworm/r-base-4.5.0=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -c filter.cpp -o filter.o
g++ -std=gnu++17 -I"/usr/share/R/include" -DNDEBUG       -fpic  -g -O2 -ffile-prefix-map=/home/jranke/git/r-backports/bookworm/r-base-4.5.0=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -c funs.cpp -o funs.o
g++ -std=gnu++17 -I"/usr/share/R/include" -DNDEBUG       -fpic  -g -O2 -ffile-prefix-map=/home/jranke/git/r-backports/bookworm/r-base-4.5.0=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -c group_by.cpp -o group_by.o
g++ -std=gnu++17 -I"/usr/share/R/include" -DNDEBUG       -fpic  -g -O2 -ffile-prefix-map=/home/jranke/git/r-backports/bookworm/r-base-4.5.0=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -c group_data.cpp -o group_data.o
g++ -std=gnu++17 -I"/usr/share/R/include" -DNDEBUG       -fpic  -g -O2 -ffile-prefix-map=/home/jranke/git/r-backports/bookworm/r-base-4.5.0=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -c imports.cpp -o imports.o
g++ -std=gnu++17 -I"/usr/share/R/include" -DNDEBUG       -fpic  -g -O2 -ffile-prefix-map=/home/jranke/git/r-backports/bookworm/r-base-4.5.0=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -c init.cpp -o init.o
g++ -std=gnu++17 -I"/usr/share/R/include" -DNDEBUG       -fpic  -g -O2 -ffile-prefix-map=/home/jranke/git/r-backports/bookworm/r-base-4.5.0=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -c mask.cpp -o mask.o
g++ -std=gnu++17 -I"/usr/share/R/include" -DNDEBUG       -fpic  -g -O2 -ffile-prefix-map=/home/jranke/git/r-backports/bookworm/r-base-4.5.0=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -c mutate.cpp -o mutate.o
g++ -std=gnu++17 -I"/usr/share/R/include" -DNDEBUG       -fpic  -g -O2 -ffile-prefix-map=/home/jranke/git/r-backports/bookworm/r-base-4.5.0=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -c reconstruct.cpp -o reconstruct.o
g++ -std=gnu++17 -I"/usr/share/R/include" -DNDEBUG       -fpic  -g -O2 -ffile-prefix-map=/home/jranke/git/r-backports/bookworm/r-base-4.5.0=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -c slice.cpp -o slice.o
g++ -std=gnu++17 -I"/usr/share/R/include" -DNDEBUG       -fpic  -g -O2 -ffile-prefix-map=/home/jranke/git/r-backports/bookworm/r-base-4.5.0=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -c summarise.cpp -o summarise.o
g++ -std=gnu++17 -shared -L/usr/lib/R/lib -Wl,-z,relro -o dplyr.so chop.o filter.o funs.o group_by.o group_data.o imports.o init.o mask.o mutate.o reconstruct.o slice.o summarise.o -L/usr/lib/R/lib -lR
installing to /usr/local/lib/R/site-library/00LOCK-dplyr/00new/dplyr/libs
** R
** data
*** moving datasets to lazyload DB
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
*** copying figures
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** checking absolute paths in shared objects and dynamic libraries
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* DONE (dplyr)
* installing *source* package ‘ggplot2’ ...
** this is package ‘ggplot2’ version ‘3.5.2’
** pacote ‘ggplot2’ desempacotado com sucesso e somas MD5 verificadas
** using staged installation
** R
** data
*** moving datasets to lazyload DB
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
*** copying figures
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* DONE (ggplot2)
* installing *source* package ‘combinat’ ...
** this is package ‘combinat’ version ‘0.0-8’
** pacote ‘combinat’ desempacotado com sucesso e somas MD5 verificadas
** using staged installation
** R
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* DONE (combinat)

Os pacotes fonte baixados estão em
        ‘/tmp/RtmppqpSp1/downloaded_packages’
> library(dplyr)
library(ggplot2)
library(combinat)

Anexando pacote: ‘dplyr’

Os seguintes objetos são mascarados por ‘package:stats’:

    filter, lag

Os seguintes objetos são mascarados por ‘package:base’:

    intersect, setdiff, setequal, union


Anexando pacote: ‘combinat’

O seguinte objeto é mascarado por ‘package:utils’:

    combn

> if (!dir.exists("resultados")) {
  dir.create("resultados")
}
> gerar_cidades <- function(n) {
  set.seed(42)
  tibble(
    cidade = paste0("C", 1:n),
    x = runif(n, 0, 100),
    y = runif(n, 0, 100)
  )
}
> print(gerar_cidades)
function(n) {
  set.seed(42)
  tibble(
    cidade = paste0("C", 1:n),
    x = runif(n, 0, 100),
    y = runif(n, 0, 100)
  )
}
> distancia <- function(c1, c2) {
  sqrt((c1$x - c2$x)^2 + (c1$y - c2$y)^2)
}
> calcular_distancia_total <- function(caminho, cidades) {
  total <- 0
  for (i in 1:(length(caminho)-1)) {
    total <- total + distancia(cidades[caminho[i], ], cidades[caminho[i+1], ])
  }
  total <- total + distancia(cidades[caminho[length(caminho)], ], cidades[caminho[1], ])
  return(total)
}
> forca_bruta <- function(cidades) {
  inicio <- Sys.time()
  perms <- permn(1:nrow(cidades))
  melhor_dist <- Inf
  melhor_caminho <- NULL

  for (p in perms) {
    d <- calcular_distancia_total(p, cidades)
    if (d < melhor_dist) {
      melhor_dist <- d
      melhor_caminho <- p
    }
  }
  tempo <- Sys.time() - inicio
  return(list(caminho = melhor_caminho, distancia = melhor_dist, tempo = as.numeric(tempo, units = "secs")))
}
> heuristica_vizinho <- function(cidades) {
  inicio <- Sys.time()
  restantes <- 2:nrow(cidades)
  atual <- 1
  caminho <- c(atual)

  while (length(restantes) > 0) {
    proximo <- restantes[which.min(sapply(restantes, function(i) distancia(cidades[atual, ], cidades[i, ])))]
    caminho <- c(caminho, proximo)
    restantes <- setdiff(restantes, proximo)
    atual <- proximo
  }

  tempo <- Sys.time() - inicio
  return(list(caminho = caminho, distancia = calcular_distancia_total(caminho, cidades), tempo = as.numeric(tempo, units = "secs")))
}
> ## 7. Faz testes para vários tamanhos de cidades
resultados <- tibble()
> for (n in 5:8) {
  cidades <- gerar_cidades(n)
  res_bruto <- forca_bruta(cidades)
  res_heuristica <- heuristica_vizinho(cidades)

  resultados <- resultados %>% bind_rows(tibble(
    Cidades = n,
    Distancia_Bruta = round(res_bruto$distancia,2),
    Tempo_Bruta = round(res_bruto$tempo,4),
    Distancia_Heuristica = round(res_heuristica$distancia,2),
    Tempo_Heuristica = round(res_heuristica$tempo,4)
  ))
}
> print(resultados)
# A tibble: 4 × 5
  Cidades Distancia_Bruta Tempo_Bruta Distancia_Heuristica Tempo_Heuristica
    <int>           <dbl>       <dbl>                <dbl>            <dbl>
1       5            196.       0.027                 200.           0.0005
2       6            209.       0.144                 237.           0.0006
3       7            229.       1.17                  239.           0.0008
4       8            233.      10.5                   244.           0.001 
> grafico <- ggplot(resultados, aes(x = Cidades)) +
  geom_line(aes(y = Distancia_Bruta, color = "Bruta")) +
  geom_line(aes(y = Distancia_Heuristica, color = "Heuristica")) +
  labs(title = "Comparacao de Distancia", y = "Distancia Total", x = "Numero de Cidades") +
  theme_minimal()
> # Mostrar o gráfico
print(grafico)
> # Salvar o gráfico
ggsave("resultados/grafico-resultado-outras-cidades.png", plot = grafico, width = 8, height = 6, dpi = 300)
> 